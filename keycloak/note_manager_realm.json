{
  "id": "c7083adc-3002-4dd8-906d-cd80b3721fa3",
  "realm": "note_manager",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "8ffe7cfa-0ea5-4858-a1d9-06d371facb2f",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "c7083adc-3002-4dd8-906d-cd80b3721fa3",
        "attributes": {}
      },
      {
        "id": "cc2549db-cfd4-4bef-ad06-c5eb2bd440e1",
        "name": "admin",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "c7083adc-3002-4dd8-906d-cd80b3721fa3",
        "attributes": {}
      },
      {
        "id": "19467f37-37f9-4082-8b89-98e64dd66da7",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "c7083adc-3002-4dd8-906d-cd80b3721fa3",
        "attributes": {}
      },
      {
        "id": "5f748ecc-abe9-4a6d-a0e3-b7722aaeb740",
        "name": "default-roles-note_manager",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["manage-account", "view-profile"]
          }
        },
        "clientRole": false,
        "containerId": "c7083adc-3002-4dd8-906d-cd80b3721fa3",
        "attributes": {}
      }
    ],
    "client": {
      "fastapi-app": [
        {
          "id": "ddd08796-745b-43b7-8abd-d3285d015af7",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "ed2fd78d-b0d8-47a8-b7ae-76b20b25e01f",
          "attributes": {}
        }
      ],
      "realm-management": [
        {
          "id": "e036ada9-22f2-4f7d-94e8-689d12ff01d1",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "9e64b830-212e-4953-a7e9-02ba93054a5f",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "01809e5b-3be9-4ae9-bc1b-f111f6866184",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "01f37567-2647-4f81-a2ab-a373ffab1982",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "6ceb3568-86a1-42dd-a6f3-48a187a91ede",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "35209d90-a17e-4ca6-bc19-183b97362cd8",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "9d39f0e5-853d-4a06-abae-c71ad075e975",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "558356c5-c55a-4654-ba25-fb242ea1a29c",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "fc7abfd7-40f8-4c23-929a-b72c0ddfc1b8",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "d3bf4135-1d46-4734-86de-d15db662616d",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "ae4e447f-d66b-42e4-9be2-137af2d8a6b2",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-users", "query-groups"]
            }
          },
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "8cdb71c9-88a1-4407-9da8-47a0565bc0c0",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "9da5df35-ad57-4c27-90e7-4c0dedab432e",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "4ced9868-57cd-4c55-953b-0c732a071a02",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "b7a6199d-22b2-4c5e-b388-3122624c25ed",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-realm",
                "impersonation",
                "manage-identity-providers",
                "manage-authorization",
                "query-groups",
                "query-realms",
                "manage-clients",
                "view-identity-providers",
                "manage-realm",
                "query-clients",
                "view-users",
                "view-authorization",
                "query-users",
                "view-clients",
                "view-events",
                "create-client",
                "manage-users",
                "manage-events"
              ]
            }
          },
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "9e0334fb-fb21-4560-a3f7-34118f64c7c6",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "11388505-3fe9-43e3-9805-c5e3ff6d0fc9",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "f4663162-4134-4bd9-af48-93627aa427ac",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        },
        {
          "id": "fb1954df-db0d-4722-b8f7-c78a8aa3745e",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "9e84a92b-2db1-4903-9675-ed5847b7650c",
          "attributes": {}
        }
      ],
      "next-app": [
        {
          "id": "aa7a4e8d-61f0-4cb3-99ce-500e133ffead",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "1954f900-7e46-4eac-af63-c012161bdbae",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "9ac049fd-27dd-4224-ad67-54a6d90e3ff4",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "2e618bc8-26eb-43b2-affa-95af1317e8a1",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "3f7fb99a-c05e-44f5-a020-0a948362b20a",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "7f6acd60-6b5a-4773-91a3-e0da590d8def",
          "attributes": {}
        },
        {
          "id": "47ec218d-7729-41ba-95cb-12304df7ef48",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "7f6acd60-6b5a-4773-91a3-e0da590d8def",
          "attributes": {}
        },
        {
          "id": "cc3b3c57-a622-4191-893c-b45c22f1101a",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "7f6acd60-6b5a-4773-91a3-e0da590d8def",
          "attributes": {}
        },
        {
          "id": "1591b9d3-2fb8-4cf4-a556-261f6273ab99",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "7f6acd60-6b5a-4773-91a3-e0da590d8def",
          "attributes": {}
        },
        {
          "id": "78e96a17-b37e-438b-b7f8-823045112630",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "7f6acd60-6b5a-4773-91a3-e0da590d8def",
          "attributes": {}
        },
        {
          "id": "88f6db34-8490-41ef-9da1-c60208b21df7",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "7f6acd60-6b5a-4773-91a3-e0da590d8def",
          "attributes": {}
        },
        {
          "id": "f2eb4a92-aaca-4394-a81e-22b76e36f8f4",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "7f6acd60-6b5a-4773-91a3-e0da590d8def",
          "attributes": {}
        },
        {
          "id": "60e1e1de-2cd0-4e46-8064-7de1d58ae058",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "7f6acd60-6b5a-4773-91a3-e0da590d8def",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "5f748ecc-abe9-4a6d-a0e3-b7722aaeb740",
    "name": "default-roles-note_manager",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "c7083adc-3002-4dd8-906d-cd80b3721fa3"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "82c7985e-1cf9-43a3-9ed2-4ae4b144fe56",
      "username": "admin",
      "email": "admin@admin.com",
      "emailVerified": false,
      "createdTimestamp": 1717773866338,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "2f79e0a4-123d-4dda-98ab-f591474fd987",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1717773877652,
          "secretData": "{\"value\":\"Kl/FLxMlVSW32Tk7oISQhHb85pSnuggkSJqgvSmiTTxSWmBEu6PXaCRlt9DhlIs5HfDdiCrKZ9/dxvodo2Y4uA==\",\"salt\":\"DnMm3XO2ok5PUX0uVnHTog==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["admin", "default-roles-note_manager"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "fd593c28-7b8f-4286-bbbf-42a6ddaf843d",
      "username": "service-account-fastapi-app",
      "emailVerified": false,
      "createdTimestamp": 1716451085978,
      "enabled": true,
      "totp": false,
      "serviceAccountClientId": "fastapi-app",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-note_manager"],
      "clientRoles": {
        "fastapi-app": ["uma_protection"]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "5253376e-4774-4264-931b-85a5d04eeb60",
      "username": "service-account-next-app",
      "emailVerified": false,
      "createdTimestamp": 1716451171655,
      "enabled": true,
      "totp": false,
      "serviceAccountClientId": "next-app",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-note_manager"],
      "clientRoles": {
        "next-app": ["uma_protection"]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "1d8bcc26-016e-4343-a7db-194a06f05a26",
      "username": "test",
      "email": "test@test.com",
      "emailVerified": false,
      "createdTimestamp": 1717773839792,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "45516863-cb94-45de-8157-78da2ce64912",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1717773854714,
          "secretData": "{\"value\":\"y5SUVI1rPBRrZNjatalUWuLWNuEwyHTeADoy3Wo35VtomzI073SDQ+qQbuyY0jdjQEz93vZLzjDfIS3V4BGy6Q==\",\"salt\":\"lDRf30Mm0MC+AD+xmN2I1A==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-note_manager"],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "7f6acd60-6b5a-4773-91a3-e0da590d8def",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/note_manager/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/note_manager/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7a7542ee-6911-4e3a-bf86-b6480757b81a",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/note_manager/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/note_manager/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "fab147d3-7833-4823-9921-5279a8a81553",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0529b191-5552-4514-a083-b5ad225b7170",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2e618bc8-26eb-43b2-affa-95af1317e8a1",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ed2fd78d-b0d8-47a8-b7ae-76b20b25e01f",
      "clientId": "fastapi-app",
      "name": "",
      "description": "",
      "rootUrl": "http://backend-service.com:8000",
      "adminUrl": "http://backend-service.com:8000",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "QTjvKcVww1OsEBOP0SugrdKbXurlpJBM",
      "redirectUris": ["http://backend-service.com:8000/*"],
      "webOrigins": ["http://backend-service.com:8000"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "client.secret.creation.time": "1717773512",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "client.use.lightweight.access.token.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "acr.loa.map": "{}",
        "require.pushed.authorization.requests": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "display.on.consent.screen": "false",
        "pkce.code.challenge.method": "S256",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "1970ab8d-1c97-4ae2-83d2-5bfc285abb7c",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d249bc93-ccc6-4c57-8e9d-9cc393fed272",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8cf6a3ed-5f6f-43d6-a281-ac8a7858bcd7",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1954f900-7e46-4eac-af63-c012161bdbae",
      "clientId": "next-app",
      "name": "",
      "description": "",
      "rootUrl": "http://localhost:3000",
      "adminUrl": "http://localhost:3000",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "Q6pQJF8IgLNWE8GSRB3tT8w9Iqryh0DY",
      "redirectUris": ["http://localhost:3000/*"],
      "webOrigins": ["http://localhost:3000"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "client.secret.creation.time": "1717773540",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "client.use.lightweight.access.token.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "acr.loa.map": "{}",
        "require.pushed.authorization.requests": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "display.on.consent.screen": "false",
        "pkce.code.challenge.method": "S256",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "23897893-f591-43a7-8601-f4ceef34f91c",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c03b5961-a256-4ab8-9903-dfe66e596684",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5cfeb7b0-44bb-4112-be0f-3707171e8ebc",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "9e84a92b-2db1-4903-9675-ed5847b7650c",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2c19d22a-33d0-4ba6-9702-5cc7b4980f26",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/note_manager/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/note_manager/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "5858a96d-7c5d-400b-b9af-ec9a9c2fd069",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "5dce59a2-b2fc-4de3-9034-bc65d698becd",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "c145a504-f2d6-46d0-bf40-6773cd950a62",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c9b61a40-e46a-4fab-b590-e48c57918ee9",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "b99a6346-9061-4b3d-9514-f23eaec2179a",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "aeb39ca4-79ac-4981-94e5-603fbe143d65",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "71997bb2-b9d7-4f47-9845-7e4c982ff97f",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5da32d84-2dd5-40c5-a0f6-fd203a5e49a1",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "514b2da7-f34b-430f-b77b-7f3b2fb86ab6",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "436542ac-ed3b-4ce6-b3b9-45e7246ad4d5",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ade080cb-e821-4682-b835-27d639df7cab",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "32790c1f-7ce8-4b71-a6cf-22c1eaca13c6",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "789401e8-7300-4bae-ac7c-8531a3025feb",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "886c6a9a-a590-4697-8f66-09c0d63bf599",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ccd15ac8-807e-43a0-93a4-f0c7b7be92c2",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "452bdb14-8fdb-4724-955f-6780d0ca2e3a",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "638c1fa1-8758-4779-9674-7628b7c10426",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "47ad2a2f-e3d6-434f-9894-3f264fd66a70",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6c8e6fe3-7658-422b-b314-8f11c54c526f",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1ddb3a63-3460-4064-a4d4-9be64c923e56",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "11861de2-eda5-4cf3-b58b-cbcef9c2a012",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "1dab9b18-4aba-4b32-a884-a657b394856d",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "57500311-4051-4aa3-b4ba-181c66a7ebb0",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "9bd7d672-33b8-4353-b693-a85dc702d0b2",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "ecef8c74-7194-46bd-ad40-9da7ce928dda",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "0d9c6399-2e69-42df-94cb-4186aef81712",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5e9e0cf9-6ee4-418d-a61a-bef3626d89b1",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "23e5ec01-aaa2-46ef-9819-648ecbc4136d",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "868895f9-88e2-4516-bc42-43549f5a84d5",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "19dc5eb1-dc4c-46c4-a998-ecef622bfbef",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "de279e83-19a6-409a-9eee-11b00794dfdc",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "cde1b521-1337-44bb-8f30-ff7250bfa93e",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "f143bf1d-59f6-4f8a-a14f-ef24aa74c60f",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "c46360a7-3a9b-44b6-a925-2b207b2fad7f",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "57ed2832-56df-46a9-85dd-4fddb08fae59",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "0a406ff9-977a-4365-bb4d-1ed73fd559f7",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "136dbf3d-e492-4d4c-b231-bc0ea6049cb3",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "af9a68f6-6255-407e-b7ed-35fc76fb6a08",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "4b5531c2-18cd-43d5-a928-8d76ebc02a2b",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "32fde81a-69ae-4573-bc94-315da960a604",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "343889fc-7fb3-47b0-9b40-7c6aa01bf757",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "b2819c3e-507a-4faf-9c60-7c80e7a979f6",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper"
          ]
        }
      },
      {
        "id": "0f355e41-25f2-456a-bef5-66e0a552e550",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper"
          ]
        }
      },
      {
        "id": "45b42e03-9b0f-4dc4-b83b-e04d4482f98f",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "52f22d56-447a-48d9-824f-5e5d88f7a4dd",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "ee329a97-e527-4f16-ad24-7104ec4a37c2",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "eb73af87-19fa-488f-bde7-d4359cd88342",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {
          "kc.user.profile.config": [
            "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "0feb3429-e6b9-44fc-88f8-641c1c65734e",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAv9FPxf8+B+S6kjkZxQEdcfb6qVP/vG8c/PDKGgdWQB50XLir1YjsY2FIvjGENTlqjIn4vSHm1DKCaUUe5MdwAkGmq6un2qXnLjj0GGQ2fuHh4hyUJ7IFfLARZvbHWzshvuPImm3Bkvppw7lBUN3ck02tT7qxpjPmKBl/q0rnPHbsqc3wK5R3Q/ad3GGTWqttByLPOMX4CoLJDPGmUCZ5hVc9xGIQoD4SniWYVsFCzdcbfWUIy7r2o8LyrC9WOsO5XC2PNtvKEuAmPVg4ViMd51AvI+KbH+sKQQ7DP76XoJ5uW4pqxsQlLlT07pOZmckwicIAr3CeW9J2vKrYARO7MwIDAQABAoIBAEmXbNMqT2qo2tmRtazK9jiMiHOhafqp6IW0fd1JllIoPP17zlUw4HxqTQXHKpFe811y667oTE56CGWJ4sXkLDl5ZY/0XgQ5ZT3rFN8sx2mbkNV2oHKwToGdbTfDEw4R3CsH6iUxWbRhhWVVdFUpoWAUS5tMpa59t94Hll8p8BhWXwLUGUsHUnf4tkf2CDPGH4vL4FVwZIQKzeg1XeO6E1O6NOWESYMp8MO+6nk/HI9erLdsw8yyDfqZj2dZqW3lJ3Pfln1sfjnU4VW/fx56SbvdxEzxFvrCh6XCvImcnW3lYnv566YFjzPE6MjJo5+CXWSdhThlkhOXVLbV1jA7tHECgYEA9updtEekBAXFF7piNgpRrXd/ODEDjEEFFJfRvhyEDThiiOWG2rNk/gd9avE/tZ19UncscSahvRIOKz/157zgfGhA1TjsFBirZrMA6LgEGviHGPoLJQHJ1w6uIxMr86eHtgEGWc3zu3USDlCZflSJ61MDZglr+xjyBC71IF/8V4MCgYEAxt/+KeNaRv2ry/tLUoX9IjIcrYsqWYmMLwCrl4hCQ0VcL360cvwHdpbVUfOlE7KXQBykG3njtXY9s1ctq0e4ja/tQJTzDIMgZg73vkAv4VEX8OgxLAH2WhJ1nfTBhrNu+u1XCswipF25D/etYmHPxzjsncE1yM3YhJ0rhdSfDpECgYAF7DE7Ncy1W/4SR6I7cZvr8UXX7zUKlDSu/cVGLiDswEF8zySg8lSl00Aq5IaGsLRk2f7y595RTrGQUARx/pHT6hxEAQ2Ind7eo8SN0HwouXVkH/tMc/KHeg6rQLZ5LbePog6o8Mu7318DgONtqFF2l5MpS2iPqVWEzCuND0BaSQKBgEpGzGmepVAQXEKyF1659mH4L2fNq0KHsdi4Ol49IOp5FEYU35Z2dN8g1IloI0ZpFD54s/4jFx3mDINX0xG+lrosc8MEHoaUztvvSS5AUOGpZPSv8/WIwhbAADe/eywxBgkn7bN1rJaQ/pZtHc+50l2I8C63Q7w8zVoyTVgNol5RAoGBANVHXPT8RYnysbUOs9z1QNHB2EFtMQcNiu23KhupNBzCtIhpdKlnxxiV4rDWUaNFAh6aRIsCpKpc/crOaURdTRkcBiCE5EztFZPJ9VoLEppumGJIpZPIABeHIm060LBCBTgvHtlTMYecpYkHeWA9SC5OlTBSoJp9em+uotSH/TLu"
          ],
          "certificate": [
            "MIICpzCCAY8CBgGP8z2rjDANBgkqhkiG9w0BAQsFADAXMRUwEwYDVQQDDAxub3RlX21hbmFnZXIwHhcNMjQwNjA3MTUwNTU2WhcNMzQwNjA3MTUwNzM2WjAXMRUwEwYDVQQDDAxub3RlX21hbmFnZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/0U/F/z4H5LqSORnFAR1x9vqpU/+8bxz88MoaB1ZAHnRcuKvViOxjYUi+MYQ1OWqMifi9IebUMoJpRR7kx3ACQaarq6fapecuOPQYZDZ+4eHiHJQnsgV8sBFm9sdbOyG+48iabcGS+mnDuUFQ3dyTTa1PurGmM+YoGX+rSuc8duypzfArlHdD9p3cYZNaq20HIs84xfgKgskM8aZQJnmFVz3EYhCgPhKeJZhWwULN1xt9ZQjLuvajwvKsL1Y6w7lcLY8228oS4CY9WDhWIx3nUC8j4psf6wpBDsM/vpegnm5bimrGxCUuVPTuk5mZyTCJwgCvcJ5b0na8qtgBE7szAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAK/FfeT6qABGcBvzQfVnBj/wGwu/Xxo+8U2WVj3W+rwy1+5imKmKXCHdgkfxBjwEszgF55AJQ2NJCpcZL8+Du50hZQELKkdkMGmhJrixnaq7jM9dclsvvM+6hh65vYOPGkOM8OvdA8y2ZFYmfDUw/RznloQTQz2cPwsuOcFbPGT3EnV1gJogjRJMKMh+EtK75AoYh+s+zUFkihfz3tkWXaq2yFedwRvdL1uwSyxeH0xT75jkF9PlLLAsq0+4fO+i4zJ/F3ladV9Iq8MwiCuep/0t8zfgZWEY9G46ky+Q2Ebsg5ET+ncZpq2BVaQjK9M+XTis9yue3ZMSanbf4B3dkzc="
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "f15a865c-a4c2-48dc-8247-32823a13f258",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["2a9ecfac-563a-4c14-9509-846af84b64a5"],
          "secret": [
            "O_YdJXqqZ-90cQvoqnc09XzqhG_fUEQh81hRGBlRyN_5-WKfaPOPl-Rt-NrpyM1Jn9HLIJxCClyOMzqVvTnlQA7W7TfmAKNDA5erzv67umbwrUak55kEmyyfiQXuxHDCduQbjpyVZ1TrSFWq6bJGswhzkCbaNPmSZA9_0k3uvvI"
          ],
          "priority": ["100"],
          "algorithm": ["HS512"]
        }
      },
      {
        "id": "6c6c3aae-ca61-4360-a214-1221bcb0ca2a",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["9f47c8da-3e75-4c92-a682-a456c27d8575"],
          "secret": ["Bo0cl8D1naLm_Oo7YuRpHw"],
          "priority": ["100"]
        }
      },
      {
        "id": "86a1a50c-6dfd-4696-8bd9-2f71b199239d",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEoQIBAAKCAQEAz+FGA48+bKb9Q1SdgIgLQwm2RL7hDCQG6Lmbl3Gy7rNsCFHdH5v0H0hv/ll6WAlcF9bbuanjZHcGPPb7gnZVhnjUnpvq9EymXHuHE9WXDsfi3iwbzSiiBJF/XZWzpKrWVc2LPY0Vjv+Y5kEdpHPpLq1L1zOX5DOt5rivYDGcvRZeYSCnkax+HOMf92CdJ4ksLlO+E4/BzlI9j/xOIdHEoy5xKof1eXuhnuIAL2D9sSUMSrV0mUiSSK6uf4D/Q//G4vvGEPsTdDu08tLN/CJHU8/b4BXE2WOaEdH+7c+vkueCfxUvhBgIg4MpinSAOenQANz/DJACqafbh+mp01HgVwIDAQABAoIBAAYhxIFwCmzaY30cHrCUaBSi/DPnQiyBVuIq22/qWYIDW+FGR5SvnSdbvntNDg1RFVzZ/c2VDnvqVjjv0M0b4CZLznsb6Usp2acVDmUjjJr8gsYqnJVUKKykKBLNdX5FeyC5I+19tGWX8jLUjTh1Iis6JGhlgV+ote1ThE987H0tVpY87yBmuvrOKzjVnAHzKpw2iOSnys4O9mBOwn2EOR1PiM8UQWGZcRdQHQEF/yGMtPbIkZsgiaofpBfSqdofC6vnH7aPLOsSNvflbnuhnXCy1HMzxvO6w9pfLChKGKxurkD+ySOtcr5oGPdHTLrctRC6xdqGuXR4xF7UkjVmwakCgYEA+YSgfFEvrj689sS/GrYgYCjg3TbsK5AkMoCZU80X6iq4x+n+ekCLRKLZA5fgkUO3dczP3sm7Kdf/lCVUQVkcon1G3OiNYYeDtafSEo7WOLtGRWedtqomrirzCdhjma95LqHvw4vZQ7UDKDYbzejYkCC4sBU6Ug2V15qwOAKscDkCgYEA1Ue9f/ADl6us5mOKSjLWZJdRZ6VCvsNA/Rj91O2rwT0zoZ9jnOv6qstzvuK4Fn/bTOL/xqCtSKiozl31hPsqxHvv5A6vwY/1l4BF6xHSjCM3kyfbr1hZbRYqWPtBtt6YPNIVW8CjF17z6ovzsvq8BXwBcpIscSFCvyQUB4DXtQ8CgYBvv2U8qAOJrxFkFzNbXCvdxREIIbvdur1rXMrOjDDkr+N3rSVKTTPSNnioslFh3YkBmguSxJgtIk6VY657YdSANUkSUJhZEJ79MT7VDuGEIONU3BX3I/cU06lrRF0/DCZiqyW9VxmjyCK01J7ZNiofSnhMbAVlkC4GlIHNY+0kiQJ/cvg5Lr4zMY9ZpNgDs/uzloX7W+O6Fxsp7UWLjzyPWZukOXuyNuT+OxNxUXTlxzsk/E1hk7EJuCEy3gvITecXJtOofUdtduojeYesKQtydBiH3MufoOX/Ts6kBVNsGSfk6ORWnx84y2BkHAtVUyXWNR6jqR8i1dkYIfFQ2rqZjQKBgQC6dM3BgbA5gzqelPgwltDKnZnOJuz6KJ3vtHbP8qHuzYzfRIaBrRZ3TUsVPCoqoNISqmj6Bqt3IIed9V4rX8WC58LssmjerhDBp7LFocGrpDEG5thsfQYauTJ2GwgMygwgSBwJCWXDFV3tN0QE/NFEeZ50e6f/ILReWegI6o9ZLw=="
          ],
          "certificate": [
            "MIICpzCCAY8CBgGP8z2r7zANBgkqhkiG9w0BAQsFADAXMRUwEwYDVQQDDAxub3RlX21hbmFnZXIwHhcNMjQwNjA3MTUwNTU2WhcNMzQwNjA3MTUwNzM2WjAXMRUwEwYDVQQDDAxub3RlX21hbmFnZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDP4UYDjz5spv1DVJ2AiAtDCbZEvuEMJAbouZuXcbLus2wIUd0fm/QfSG/+WXpYCVwX1tu5qeNkdwY89vuCdlWGeNSem+r0TKZce4cT1ZcOx+LeLBvNKKIEkX9dlbOkqtZVzYs9jRWO/5jmQR2kc+kurUvXM5fkM63muK9gMZy9Fl5hIKeRrH4c4x/3YJ0niSwuU74Tj8HOUj2P/E4h0cSjLnEqh/V5e6Ge4gAvYP2xJQxKtXSZSJJIrq5/gP9D/8bi+8YQ+xN0O7Ty0s38IkdTz9vgFcTZY5oR0f7tz6+S54J/FS+EGAiDgymKdIA56dAA3P8MkAKpp9uH6anTUeBXAgMBAAEwDQYJKoZIhvcNAQELBQADggEBADTmXBkYQ8KLwCbZ4yS3N/PvyQTH2PrHOE8qwS+F6LspSIKxxrnxMWkY0xxoHPG6/0eXPvrQJ3Ys9A/56SFo/LiADSoAWBv0qPktQDxOxr/nl42agrPsixxLjyJuuy1sMTAYtsrvFMWUfaZYLioWaDRv2geQCcZags14MBgzHH2Pky1HEpSEZUByYt+cCFNJUtGGrs8SXaSi/rx8sLvuCkt/6q2Uo7Cowy2N2j4CLPXCcz94ViwzhqBJUvwDnjUiBa6k7STzlK86DW4tpgr/cr5sF72GDQub5v5o5fnVG8jB3FyKbpmzbypDr+N+G/poDaIvbk/nz8Z6++ho1kOlpj8="
          ],
          "priority": ["100"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "9a0a3506-c5e7-4df2-9e2b-4af9c9a13c02",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "45e24af6-0ebb-4472-b52c-eb0ef7771c96",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "eb4390dc-1a7e-48ae-87b7-962687a25584",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5b1bca04-7f50-477e-a06f-80e461251383",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "338ab49e-49b6-4eef-b533-88b659a17736",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cb7bc9cf-18ee-4893-a6c2-a4b6e9927e1b",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8754d8d8-a9e9-4cf8-bad9-a11fd38e7364",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "57e2587b-aa8b-4bce-89c5-bedddda48ad2",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e5edb021-4878-42d6-ab49-e9469f1f450b",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9f256798-9fff-45a4-8fb6-54a49bddb56e",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9635828b-4f09-44ae-8b67-71d9d31912dc",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bd8cd845-945f-482b-9022-48def002a2a4",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "070738cc-8561-43aa-8a78-64763c2f4949",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f922fbd1-8d1e-406b-8db1-27a2a83ef091",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e49aa796-617f-43c1-b35d-77ba89b8f05c",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "194fda12-879d-492f-af59-feef42e16816",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "198932ed-0931-466b-97fb-9ec33466b821",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "195b38df-367f-40ba-9ea1-40120352b530",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "7b2b3b63-87dc-48c7-ba70-d6230db5bfaf",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "9d73c417-4254-4bf5-b2a8-78e47cea4f2f",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "24.0.5",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
